@model WebApplication1.Models.ViewModels.ManageLecturerModulesViewModel

@{
    ViewData["Title"] = "Manage Lecturer Modules";
}

<div class="bg-gray-50 min-h-screen py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="mb-6">
            <a href="@Url.Action("Index")" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                Back to Lecturers
            </a>
        </div>

        <div class="mb-8">
            <h1 class="text-2xl font-bold text-gray-900">Manage Modules for @Model.LecturerName</h1>
            <p class="mt-2 text-sm text-gray-500">Assign or unassign modules for this lecturer</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="bg-green-50 border-l-4 border-green-400 p-4 mb-6">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-green-700">@TempData["SuccessMessage"]</p>
                    </div>
                </div>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700">@TempData["ErrorMessage"]</p>
                    </div>
                </div>
            </div>
        }

        <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">
            <!-- Assign New Module -->
            <!-- Assign New Module -->
            <div class="bg-white shadow overflow-hidden sm:rounded-lg">
                <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                    <h2 class="text-lg font-medium text-gray-900">Assign Module</h2>
                    <p class="mt-1 text-sm text-gray-500">Search and assign a module to this lecturer</p>
                </div>
                <div class="px-4 py-5 sm:p-6">
                    <input type="text" id="moduleSearch" placeholder="Search modules..." class="mb-4 block w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" />

                    <div class="max-h-64 overflow-y-auto border rounded">
                        <ul id="moduleList" class="divide-y divide-gray-200">
                            @foreach (var module in Model.AllModules)
                            {
                                <li class="p-3 flex items-center justify-between module-item" data-search="@($"{module.Text} {module.Value}")">
                                    <span class="text-sm text-gray-800">@module.Text</span>
                                    <form asp-action="AssignModule" method="post" class="inline">
                                        <input type="hidden" name="LecturerId" value="@Model.LecturerId" />
                                        <input type="hidden" name="ModuleId" value="@module.Value" />
                                        <button type="submit" class="ml-2 px-3 py-1.5 border border-transparent text-sm rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none">
                                            Assign
                                        </button>
                                    </form>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>


            <!-- Currently Assigned Modules -->
            <div class="bg-white shadow overflow-hidden sm:rounded-lg">
                <div class="px-4 py-5 border-b border-gray-200 sm:px-6">
                    <h2 class="text-lg font-medium text-gray-900">Currently Assigned Modules</h2>
                    <p class="mt-1 text-sm text-gray-500">Modules currently assigned to this lecturer</p>
                </div>
                <div class="px-4 py-5 sm:p-6">
                    @if (Model.AssignedModules.Any())
                    {
                        <ul class="divide-y divide-gray-200">
                            @foreach (var assignment in Model.AssignedModules)
                            {
                                <li class="py-3">
                                    <div class="flex justify-between items-center">
                                        <div>
                                            <p class="text-sm font-medium text-gray-900">@assignment.Module.ModuleName (@assignment.Module.ModuleCode)</p>
                                            <p class="text-xs text-gray-500">@assignment.Module.Course.Faculty - @assignment.Module.Course.CourseName</p>
                                            <p class="text-xs text-gray-500">Assigned: @assignment.AssignedDate.ToString("yyyy-MM-dd")</p>
                                        </div>
                                        <form asp-action="UnassignModule" method="post">
                                            <input type="hidden" name="assignmentId" value="@assignment.Id" />
                                            <input type="hidden" name="lecturerId" value="@Model.LecturerId" />
                                            <button type="submit" class="inline-flex items-center px-3 py-1.5 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
                                                    onclick="return confirm('Are you sure you want to unassign this module?');">
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                                </svg>
                                                Unassign
                                            </button>
                                        </form>
                                    </div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-gray-500">No modules are currently assigned to this lecturer.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('moduleSearch').addEventListener('input', function () {
            var filter = this.value.toLowerCase();
            document.querySelectorAll('.module-item').forEach(function (item) {
                var text = item.getAttribute('data-search').toLowerCase();
                item.style.display = text.includes(filter) ? '' : 'none';
            });
        });
    </script>
}
