@model WebApplication1.Models.ViewModels.EditQuizQuestionViewModel

@{
    ViewData["Title"] = "Edit Question";
}

<div class="bg-gray-50 min-h-screen py-8">
    <div class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="mb-6">
            <a href="@Url.Action("EditQuiz", new { id = Model.QuizId })" class="inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none">
                Back to Quiz
            </a>
        </div>

        <div class="mb-8">
            <h1 class="text-2xl font-bold text-gray-900">Edit Question</h1>
            <p class="mt-2 text-sm text-gray-500">
                Quiz: @Model.QuizTitle
            </p>
        </div>

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm-1-4a1 1 0 102 0 1 1 0 00-2 0zm.293-8.707a1 1 0 011.414 0L11 6.586l.293-.293a1 1 0 111.414 1.414L12.414 8l.293.293a1 1 0 01-1.414 1.414L11 9.414l-.293.293a1 1 0 01-1.414-1.414L9.586 8 9.293 7.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-sm text-red-700">@TempData["ErrorMessage"]</p>
                    </div>
                </div>
            </div>
        }

        <div class="bg-white shadow overflow-hidden sm:rounded-lg">
            <form asp-action="EditQuizQuestion" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="QuestionId" />
                <input type="hidden" asp-for="QuizId" />
                <input type="hidden" asp-for="QuizTitle" />

                <div asp-validation-summary="ModelOnly" class="text-red-500 px-4 py-3"></div>
                <div class="px-4 py-5 sm:p-6 space-y-6">
                    <!-- Question Type (readonly to avoid changing type) -->
                    <div>
                        <label asp-for="Type" class="block text-sm font-medium text-gray-700">
                            Question Type
                        </label>
                        <div class="mt-1">
                            <input asp-for="Type" class="block w-full bg-gray-100" readonly="readonly" />
                        </div>
                    </div>

                    <!-- Question Text -->
                    <div>
                        <label asp-for="QuestionText" class="block text-sm font-medium text-gray-700">
                            Question Text <span class="text-red-500">*</span>
                        </label>
                        <div class="mt-1">
                            <textarea asp-for="QuestionText" rows="3" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border border-gray-300 rounded-md" required></textarea>
                            <span asp-validation-for="QuestionText" class="text-sm text-red-500"></span>
                        </div>
                    </div>

                    <!-- Question Points -->
                    <div>
                        <label asp-for="Points" class="block text-sm font-medium text-gray-700">
                            Points <span class="text-red-500">*</span>
                        </label>
                        <div class="mt-1">
                            <input asp-for="Points" type="number" min="1" max="100" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" required />
                            <span asp-validation-for="Points" class="text-sm text-red-500"></span>
                        </div>
                    </div>

                    <!-- Multiple Choice Options Section -->
                    @if (Model.Type == QuestionType.MultipleChoice)
                    {
                        <div id="multipleChoiceSection" class="border-t border-b border-gray-200 py-4">
                            <div class="mb-4">
                                <h3 class="text-lg font-medium text-gray-900">Multiple Choice Options</h3>
                                <p class="text-sm text-gray-500">Edit options and select the correct one</p>
                            </div>
                            @for (int i = 0; i < 4; i++)
                            {
                                var optionValue = (Model.Options != null && Model.Options.Count > i) ? Model.Options[i] : "";
                                <div class="mb-3 p-3 bg-gray-50 rounded-md">
                                    <div class="flex items-center">
                                        <div class="flex items-center h-5">
                                            <input id="correct-option-@i" name="correctOption" type="radio" value="@i"
                                                   class="focus:ring-indigo-500 h-5 w-5 text-indigo-600 border-gray-300"
                                            @(Model.CorrectAnswer == optionValue ? "checked" : "")>
                                        </div>
                                        <div class="ml-3 w-full">
                                            <label for="correct-option-@i" class="block text-sm font-medium text-gray-700">Option @(i + 1) (select if correct)</label>
                                            <input type="text" name="Options[@i]" value="@optionValue" class="mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" placeholder="Enter option text" required>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }

                    <!-- True or False Section -->
                    @if (Model.Type == QuestionType.TrueFalse)
                    {
                        <div id="trueFalseSection" class="rounded-md bg-green-50 p-4">
                            <div class="mb-2">
                                <h3 class="text-lg font-medium text-gray-900">True or False</h3>
                                <p class="text-sm text-gray-500">Select the correct answer</p>
                            </div>
                            <div class="flex items-center gap-6">
                                <label class="flex items-center space-x-2">
                                    <input type="radio" name="trueFalseOption" id="trueOption" value="True" @(Model.CorrectAnswer == "True" ? "checked" : "") />
                                    <span>True</span>
                                </label>
                                <label class="flex items-center space-x-2">
                                    <input type="radio" name="trueFalseOption" id="falseOption" value="False" @(Model.CorrectAnswer == "False" ? "checked" : "") />
                                    <span>False</span>
                                </label>
                            </div>
                        </div>
                    }

                    <!-- Short Answer Info (show if needed) -->
                    @if (Model.Type == QuestionType.ShortAnswer)
                    {
                        <div class="rounded-md bg-blue-50 p-4">
                            <h3 class="text-sm font-medium text-blue-800">Short Answer Question</h3>
                            <p class="mt-2 text-sm text-blue-700">
                                This question requires a brief text response from students. You will need to manually review and grade their answers.
                            </p>
                        </div>
                    }

                    <!-- Image Upload (OPTIONAL) -->
                    <div>
                        <label for="ImageFile" class="block text-sm font-medium text-gray-700">
                            Image (Optional)
                        </label>
                        <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md">
                            <div class="space-y-1 text-center">
                                <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true">
                                    <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                                </svg>
                                <div class="flex text-sm text-gray-600">
                                    <label for="ImageFile" class="relative cursor-pointer bg-white rounded-md font-medium text-indigo-600 hover:text-indigo-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-indigo-500">
                                        <span>Upload a file</span>
                                        <input id="ImageFile" name="ImageFile" type="file" class="sr-only" accept="image/*" />
                                    </label>
                                    <p class="pl-1">or drag and drop</p>
                                </div>
                                <p class="text-xs text-gray-500">PNG, JPG, GIF up to 2MB</p>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.ExistingImageUrl))
                        {
                            <div class="mt-2">
                                <img src="@Model.ExistingImageUrl" alt="Question Image" class="h-32 w-auto object-contain rounded border border-gray-200" />
                                <div class="mt-1">
                                    <input type="checkbox" asp-for="RemoveImage" id="RemoveImage" />
                                    <label for="RemoveImage" class="text-xs text-red-600 hover:text-red-800">Remove image</label>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <input type="hidden" id="correctAnswerField" asp-for="CorrectAnswer" value="@Model.CorrectAnswer" />

                <div class="px-4 py-3 bg-gray-50 text-right sm:px-6 space-x-3">
                    <a href="@Url.Action("EditQuiz", new { id = Model.QuizId })" class="inline-flex justify-center py-2 px-4 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Cancel
                    </a>
                    <button type="submit" id="submitButton" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                        Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.querySelector('form');
            const correctAnswerField = document.getElementById('correctAnswerField');
        @if (Model.Type == QuestionType.MultipleChoice)
        {
            <text>
                    form.addEventListener('submit', function (e) {
                        const selectedRadio = document.querySelector('input[name="correctOption"]:checked');
                        if (!selectedRadio) {
                            e.preventDefault();
                            alert('Please select the correct answer option by clicking the radio button next to it.');
                            return;
                        }
                        const optionIndex = parseInt(selectedRadio.value);
                        const optionText = document.querySelector(`input[name="Options[${optionIndex}]"]`).value;
                        correctAnswerField.value = optionText;
                    });
            </text>
        }
        @if (Model.Type == QuestionType.TrueFalse)
        {
            <text>
                    form.addEventListener('submit', function (e) {
                        const selectedTF = document.querySelector('input[name="trueFalseOption"]:checked');
                        if (!selectedTF) {
                            e.preventDefault();
                            alert('Please select True or False as the correct answer.');
                            return;
                        }
                        correctAnswerField.value = selectedTF.value;
                    });
            </text>
        }
        });
    </script>
}
